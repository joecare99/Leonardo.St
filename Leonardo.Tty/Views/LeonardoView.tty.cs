// ***********************************************************************
// Assembly         : Leonardo
// Author           : Mir
// Created          : 08-05-2022
//
// Last Modified By : Mir
// Last Modified On : 10-22-2022
// ***********************************************************************
// <copyright file="LeonardoView.cs" company="JC-Soft">
//     Copyright © JC-Soft 2021
// </copyright>
// <summary></summary>
// ***********************************************************************
using ConsoleLib;
using System;
using System.Drawing;
using Leonardo.ViewModels.Interfaces;
using System.ComponentModel;
using Leonardo_net.tty.Properties;
using CommunityToolkit.Mvvm.Input;
using ConsoleLib.CommonControls;
using ConsoleLib.ConsoleLib.Interfaces;

/// <summary>
/// The Views namespace.
/// </summary>
/// <autogeneratedoc />
namespace Leonardo.Views;

/// <summary>
/// Class LeonardoView.
/// Implements the <see cref="Panel" />
/// </summary>
/// <seealso cref="Panel" />
public class LeonardoView : Panel
{
    /// <summary>
    /// The calculator
    /// </summary>
    private readonly ILeonardoViewModel _ViewModel;
    /// <summary>
    /// The label accumulator
    /// </summary>
    private readonly Label lblMessage;
    private readonly Terminal txtWindow;
    private readonly Button btnDecode;

    /// <summary>
    /// Initializes a new instance of the <see cref="LeonardoView" /> class.
    /// </summary>
    /// <param name="App">The application.</param>
    public LeonardoView(ILeonardoViewModel ViewModel, IApplication App)
    {
        Parent = App;
        _ViewModel = ViewModel;

        Border = ConsoleFramework.doubleBoarder;
        ForeColor = ConsoleColor.Blue;
        BackColor = ConsoleColor.DarkBlue;
        BoarderColor = ConsoleColor.Green;
        Dimension = new Rectangle(3, 5, 60, 22);
        Shadow = true;

        btnDecode = new Button()
        {
            Parent = this,
            ForeColor = ConsoleColor.White,
            BackColor = ConsoleColor.DarkGray,
            Shadow = true,
            Position = new Point(23, 12),
            Accelerator = 'd',
            Text = $"{Resources.btnDecode}",
            size = new Size(15, 3),
            Command = _ViewModel.DecodeCommand
        };

        Button btnEncode = new()
        {
            Parent = this,
            ForeColor = ConsoleColor.White,
            BackColor = ConsoleColor.DarkGray,
            Shadow = true,
            Position = new Point(3, 12),
            Accelerator = 'e',
            Text = $"{Resources.btnEncode}",
            size = new Size(15, 3),
            Command = _ViewModel.EncodeCommand
        };

        Button btnGenerate = new()
        {
            Parent = this,
            ForeColor = ConsoleColor.White,
            BackColor = ConsoleColor.DarkGray,
            Shadow = true,
            Position = new Point(43, 12),
            Accelerator = 'g',
            Text = $"{Resources.btnGenerate}",
            size = new Size(15, 3),
            Command = _ViewModel.GenerateCommand
        };

        lblMessage = new Label
        {
            Parent = this,
            ForeColor = ConsoleColor.White,
            BackColor = ConsoleColor.DarkCyan,
            Position = new Point(2, 1),
            size = new Size(38, 1),
            Text = "             "
        };

        txtWindow = new Terminal { 
            Parent = this,
            BorderColor = ConsoleColor.DarkGray,
            Position = new Point(2, 3), 
            size = new Size(56, 8) 
        };

        var btnCancel = new Button
        {
            Parent = this,
            ForeColor = ConsoleColor.White,
            BackColor = ConsoleColor.DarkGray,
            Shadow = true,
            Position = new Point(38, 16),
            Accelerator = 'q',
            Text = $"░{Resources.btnClose}░",
            size = new Size(20, 3)
        };
        btnCancel.OnClick += btnCancel_Click;

        var btnTest1 = new Button
        {
            Parent = this,
            ForeColor = ConsoleColor.White,
            BackColor = ConsoleColor.DarkGray,
            Shadow = true,
            Position = new Point(2, 16),
            Accelerator = '1',
            Text = $"░Test1░",
            size = new Size(20, 1)
        };
        btnTest1.OnClick += (s,e)=>txtWindow.WriteLine($"This is a Test {btnTest1.Tag = ((int?)btnTest1.Tag??0 ) % 100 + 1}...");


        _ViewModel.PropertyChanged += _vmPropertyChanged;
        _ViewModel.MessageBoxShow += (s)=>System.Windows.Forms.MessageBox.Show(s);
        _ViewModel.ShowFileDialog += (s) => s.ShowDialog();
        _ViewModel.InputShowDialog += (s) => InputDialog.ShowDialog(s);

        _ViewModel.SetConsole(txtWindow);
        foreach (var c in typeof(ILeonardoViewModel).GetProperties())
        {
            if (c.DeclaringType == typeof(IRelayCommand))
                (c.GetValue(_ViewModel) as IRelayCommand)?.NotifyCanExecuteChanged();
            else
                _vmPropertyChanged(_ViewModel, new(c.Name));
        }
    }

    private void _vmPropertyChanged(object? sender, PropertyChangedEventArgs e)
    {
        switch (e.PropertyName)
        {
            case nameof(ILeonardoViewModel.CursorCurrent):
                break;
            case nameof(ILeonardoViewModel.MessageText):
                lblMessage.Text = _ViewModel.MessageText;
                break;
        };
    }

    /// <summary>
    /// Handles the Click event of the btnCancel control.
    /// </summary>
    /// <param name="sender">The source of the event.</param>
    /// <param name="e">The <see cref="EventArgs" /> instance containing the event data.</param>
    private void btnCancel_Click(object? sender, EventArgs? e)
    {

        (Parent as Application)?.Stop();

    }

}
